#!/usr/bin/env python
# -*- coding: utf-8 -*-

########################################################################
#
# Linux on Hyper-V and Azure Test Code, ver. 1.0.0
# Copyright (c) Microsoft Corporation
#
# All rights reserved. 
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0  
#
# THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION
# ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR
# PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
#
# See the Apache Version 2.0 License for specific language governing
# permissions and limitations under the License.
#
########################################################################

import os
import sys
import subprocess
import icatest
import icatest.daemon
import icatest.errors
#
# Command line format:
#     ica-ostype get
#
args = len(sys.argv)
if args != 2 and args != 3:
    print ("Invalid parameter")
    print ("Usage: %s get" % sys.argv[0])
    sys.exit(icatest.errors.ERROR_INVALID_PARAMETER)
if sys.argv[1].lower() != "get":
    print ("Verb not supported: %s" % sys.argv[1])
    sys.exit(icatest.errors.ERROR_INVALID_PARAMETER)

bin_path = "/usr/bin/env"
if not os.path.exists(bin_path):
    print ("No env command")
    sys.exit(icatest.errors.ERROR_FILE_NOT_FOUND)
if not os.path.isfile(bin_path):
    print ("env is not a file")
    sys.exit(icatest.errors.ERROR_BAD_ENVIRONMENT)
if not os.access(bin_path, os.X_OK):
    print ("env is not executable")
    sys.exit(icatest.errors.ERROR_BAD_ENVIRONMENT)
try:

    cmdline = [ bin_path, "uname", "-s"]
    uname = subprocess.Popen(cmdline,
                             stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
    return_code = uname.wait()
    output = uname.stdout.read().decode('utf-8')
    error = uname.stderr.read().decode('utf-8')
    if return_code == icatest.errors.ERROR_SUCCESS:
        print (output.split("\n")[0])
    else:
        print ("uname fail: code = %d, output = %s" % \
                (return_code, error.split("\n")[0]))
        return_code = ERROR_BAD_ENVIRONMENT
    sys.exit(return_code)
except Exception:
    print ("Failed to run 'uname'")
    sys.exit(icatest.errors.ERROR_BAD_ENVIRONMENT)
# vim: ff=unix expandtab shiftwidth=4
